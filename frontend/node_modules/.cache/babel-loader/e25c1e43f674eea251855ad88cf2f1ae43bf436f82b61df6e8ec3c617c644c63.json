{"ast":null,"code":"\n\n//import React, { useState } from 'react';\n//import './LoginForm.css';\n//\n//function Signup() {\n//  const [userId, setUserId] = useState('');\n//  const [password, setPassword] = useState('');\n//  const [confirmPassword, setConfirmPassword] = useState('');\n//\n//  // 사용자 입력 처리 함수\n//  const handleUserIdChange = (e) => setUserId(e.target.value);\n//  const handlePasswordChange = (e) => setPassword(e.target.value);\n//  const handleConfirmPasswordChange = (e) => setConfirmPassword(e.target.value);\n//\n//  // 회원가입 요청 처리 함수\n//  const handleSubmit = async (e) => {\n//    e.preventDefault();\n//\n//    // 비밀번호 일치 확인\n//    if (password !== confirmPassword) {\n//      alert('비밀번호를 다시 확인하세요.');\n//      return;\n//    }\n//\n//    try {\n//      const response = await fetch('http://localhost:8080/register', {\n//        method: 'POST',\n//        headers: {\n//          'Content-Type': 'application/json',\n//        },\n//        body: JSON.stringify({\n//          id: userId,\n//          password: password,\n//        }),\n//      });\n//      if (response.status === 201) {\n//        alert('회원가입 성공!');\n//        // 추가적인 회원가입 성공 처리\n//      } else {\n//        alert('회원가입 실패. 다시 시도해주세요.');\n//        // 실패 처리\n//      }\n//    } catch (error) {\n//      console.error('회원가입 요청 실패:', error);\n//      alert('회원가입 실패. 다시 시도해주세요.');\n//    }\n//  };\n//\n//  return (\n//    <div className=\"sign-up-htm\">\n//      <form onSubmit={handleSubmit}>\n//        <div className=\"group\">\n//          <label htmlFor=\"user\" className=\"label\">\n//            아이디\n//          </label>\n//          <input id=\"user\" type=\"text\" className=\"input\" value={userId} onChange={handleUserIdChange} />\n//        </div>\n//        <div className=\"group\">\n//          <label htmlFor=\"pass\" className=\"label\">\n//            비밀번호\n//          </label>\n//          <input id=\"pass\" type=\"password\" className=\"input\" data-type=\"password\" value={password} onChange={handlePasswordChange} />\n//        </div>\n//        <div className=\"group\">\n//          <label htmlFor=\"confirm-pass\" className=\"label\">\n//            비밀번호 확인\n//          </label>\n//          <input id=\"confirm-pass\" type=\"password\" className=\"input\" data-type=\"password\" value={confirmPassword} onChange={handleConfirmPasswordChange} />\n//        </div>\n//        <div className=\"group\">\n//          <input type=\"submit\" className=\"button\" value=\"회원가입\" />\n//        </div>\n//      </form>\n//      <div className=\"hr\"></div>\n//      <div className=\"foot-lnk\">\n//        <label htmlFor=\"tab-1\">이미 회원이신가요?</label>\n//      </div>\n//    </div>\n//  );\n//}\n//\n//export default Signup;","map":{"version":3,"names":[],"sources":["/Users/yewon/PycharmProjects/2023-2_PD/frontend/src/Signup.js"],"sourcesContent":["\r\n\r\n//import React, { useState } from 'react';\r\n//import './LoginForm.css';\r\n//\r\n//function Signup() {\r\n//  const [userId, setUserId] = useState('');\r\n//  const [password, setPassword] = useState('');\r\n//  const [confirmPassword, setConfirmPassword] = useState('');\r\n//\r\n//  // 사용자 입력 처리 함수\r\n//  const handleUserIdChange = (e) => setUserId(e.target.value);\r\n//  const handlePasswordChange = (e) => setPassword(e.target.value);\r\n//  const handleConfirmPasswordChange = (e) => setConfirmPassword(e.target.value);\r\n//\r\n//  // 회원가입 요청 처리 함수\r\n//  const handleSubmit = async (e) => {\r\n//    e.preventDefault();\r\n//\r\n//    // 비밀번호 일치 확인\r\n//    if (password !== confirmPassword) {\r\n//      alert('비밀번호를 다시 확인하세요.');\r\n//      return;\r\n//    }\r\n//\r\n//    try {\r\n//      const response = await fetch('http://localhost:8080/register', {\r\n//        method: 'POST',\r\n//        headers: {\r\n//          'Content-Type': 'application/json',\r\n//        },\r\n//        body: JSON.stringify({\r\n//          id: userId,\r\n//          password: password,\r\n//        }),\r\n//      });\r\n//      if (response.status === 201) {\r\n//        alert('회원가입 성공!');\r\n//        // 추가적인 회원가입 성공 처리\r\n//      } else {\r\n//        alert('회원가입 실패. 다시 시도해주세요.');\r\n//        // 실패 처리\r\n//      }\r\n//    } catch (error) {\r\n//      console.error('회원가입 요청 실패:', error);\r\n//      alert('회원가입 실패. 다시 시도해주세요.');\r\n//    }\r\n//  };\r\n//\r\n//  return (\r\n//    <div className=\"sign-up-htm\">\r\n//      <form onSubmit={handleSubmit}>\r\n//        <div className=\"group\">\r\n//          <label htmlFor=\"user\" className=\"label\">\r\n//            아이디\r\n//          </label>\r\n//          <input id=\"user\" type=\"text\" className=\"input\" value={userId} onChange={handleUserIdChange} />\r\n//        </div>\r\n//        <div className=\"group\">\r\n//          <label htmlFor=\"pass\" className=\"label\">\r\n//            비밀번호\r\n//          </label>\r\n//          <input id=\"pass\" type=\"password\" className=\"input\" data-type=\"password\" value={password} onChange={handlePasswordChange} />\r\n//        </div>\r\n//        <div className=\"group\">\r\n//          <label htmlFor=\"confirm-pass\" className=\"label\">\r\n//            비밀번호 확인\r\n//          </label>\r\n//          <input id=\"confirm-pass\" type=\"password\" className=\"input\" data-type=\"password\" value={confirmPassword} onChange={handleConfirmPasswordChange} />\r\n//        </div>\r\n//        <div className=\"group\">\r\n//          <input type=\"submit\" className=\"button\" value=\"회원가입\" />\r\n//        </div>\r\n//      </form>\r\n//      <div className=\"hr\"></div>\r\n//      <div className=\"foot-lnk\">\r\n//        <label htmlFor=\"tab-1\">이미 회원이신가요?</label>\r\n//      </div>\r\n//    </div>\r\n//  );\r\n//}\r\n//\r\n//export default Signup;\r\n"],"mappings":";;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}