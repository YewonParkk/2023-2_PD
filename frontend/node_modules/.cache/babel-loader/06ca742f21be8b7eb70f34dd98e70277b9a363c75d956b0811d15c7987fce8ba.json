{"ast":null,"code":"var _jsxFileName = \"/Users/yewon/PycharmProjects/2023-2_PD/frontend/src/Login.js\";\nimport React from 'react';\nimport Login from './Login';\nimport Signup from './Signup';\nimport Memo from './Memo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return (\n    /*#__PURE__*/\n    // <Memo />\n    _jsxDEV(\"div\", {\n      className: \"login-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-wrap\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-html\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"tab-1\",\n            type: \"radio\",\n            name: \"tab\",\n            className: \"sign-in\",\n            defaultChecked: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"tab-1\",\n            className: \"tab\",\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"tab-2\",\n            type: \"radio\",\n            name: \"tab\",\n            className: \"sign-up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"tab-2\",\n            className: \"tab\",\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-form\",\n            children: [/*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c = App;\nexport default App;\n\n//import React, { useState, useEffect } from 'react';\n//import { useNavigate } from 'react-router-dom';\n//import './LoginForm.css';\n//\n//function Login() {\n//  const [userId, setUserId] = useState('');\n//  const [password, setPassword] = useState('');\n//  const [rememberId, setRememberId] = useState(false);\n//  const navigate = useNavigate();\n//\n//\n//  useEffect(() => {\n//    const storedUserId = localStorage.getItem('userId');\n//    if (storedUserId) {\n//      setUserId(storedUserId);\n//      setRememberId(true);\n//    }\n//  }, []);\n//\n//  const handleUserIdChange = (e) => setUserId(e.target.value);\n//  const handlePasswordChange = (e) => setPassword(e.target.value);\n//  const handleRememberIdChange = (e) => setRememberId(e.target.checked);\n//\n//  const handleSubmit = async (e) => {\n//    e.preventDefault();\n//    if (rememberId) {\n//      localStorage.setItem('userId', userId);\n//    } else {\n//      localStorage.removeItem('userId');\n//    }\n//\n//    try {\n//      const response = await fetch('http://localhost:8080/login', {\n//        method: 'POST',\n//        headers: {\n//          'Content-Type': 'application/json',\n//        },\n//        body: JSON.stringify({\n//          id: userId,\n//          password: password,\n//        }),\n//      });\n//\n//      if (response.status === 200) {\n//        const data = await response.json();\n//        const access_token = data.access_token; // 토큰 가져오기\n//        localStorage.setItem('access_token', data.access_token);\n//        alert('로그인 성공!!');\n//        navigate('/memo'); // 로그인 성공 시 메모 페이지로 이동\n//      } else {\n//        alert('다시 확인하세요.');\n//      }\n//    } catch (error) {\n//      console.error('로그인 요청 실패:', error);\n//      alert('로그인 중 문제가 발생했습니다.');\n//    }\n//  };\n//\n//  return (\n//    <div className=\"sign-in-htm\">\n//      <form onSubmit={handleSubmit}>\n//        <div className=\"group\">\n//          <label htmlFor=\"user\" className=\"label\">아이디</label>\n//          <input id=\"user\" type=\"text\" className=\"input\" value={userId} onChange={handleUserIdChange} />\n//        </div>\n//        <div className=\"group\">\n//          <label htmlFor=\"pass\" className=\"label\">비밀번호</label>\n//          <input id=\"pass\" type=\"password\" className=\"input\" data-type=\"password\" value={password} onChange={handlePasswordChange} />\n//        </div>\n//        <div className=\"group\">\n//          <input id=\"check\" type=\"checkbox\" className=\"check\" checked={rememberId} onChange={handleRememberIdChange} />\n//          <label htmlFor=\"check\"><span className=\"icon\"></span> 아이디 저장</label>\n//        </div>\n//        <div className=\"group\">\n//          <input type=\"submit\" className=\"button\" value=\"로그인\" />\n//        </div>\n//      </form>\n//      <div className=\"hr\"></div>\n//      <div className=\"foot-lnk\">\n//        <label htmlFor=\"tab-2\">계정이 없다면 회원가입을 해주세요.</label>\n//      </div>\n//    </div>\n//  );\n//}\n//\n//export default Login;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Login","Signup","Memo","jsxDEV","_jsxDEV","App","className","children","id","type","name","defaultChecked","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","_c","$RefreshReg$"],"sources":["/Users/yewon/PycharmProjects/2023-2_PD/frontend/src/Login.js"],"sourcesContent":["import React from 'react';\r\nimport Login from './Login';\r\nimport Signup from './Signup';\r\nimport Memo from './Memo';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    // <Memo />\r\n    <div className=\"login-body\">\r\n      <div className=\"login-wrap\">\r\n        <div className=\"login-html\">\r\n          <input id=\"tab-1\" type=\"radio\" name=\"tab\" className=\"sign-in\" defaultChecked />\r\n          <label htmlFor=\"tab-1\" className=\"tab\">\r\n            로그인\r\n          </label>\r\n          <input id=\"tab-2\" type=\"radio\" name=\"tab\" className=\"sign-up\" />\r\n          <label htmlFor=\"tab-2\" className=\"tab\">\r\n            회원가입\r\n          </label>\r\n          <div className=\"login-form\">\r\n            <Login />\r\n            <Signup />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n//import React, { useState, useEffect } from 'react';\r\n//import { useNavigate } from 'react-router-dom';\r\n//import './LoginForm.css';\r\n//\r\n//function Login() {\r\n//  const [userId, setUserId] = useState('');\r\n//  const [password, setPassword] = useState('');\r\n//  const [rememberId, setRememberId] = useState(false);\r\n//  const navigate = useNavigate();\r\n//\r\n//\r\n//  useEffect(() => {\r\n//    const storedUserId = localStorage.getItem('userId');\r\n//    if (storedUserId) {\r\n//      setUserId(storedUserId);\r\n//      setRememberId(true);\r\n//    }\r\n//  }, []);\r\n//\r\n//  const handleUserIdChange = (e) => setUserId(e.target.value);\r\n//  const handlePasswordChange = (e) => setPassword(e.target.value);\r\n//  const handleRememberIdChange = (e) => setRememberId(e.target.checked);\r\n//\r\n//  const handleSubmit = async (e) => {\r\n//    e.preventDefault();\r\n//    if (rememberId) {\r\n//      localStorage.setItem('userId', userId);\r\n//    } else {\r\n//      localStorage.removeItem('userId');\r\n//    }\r\n//\r\n//    try {\r\n//      const response = await fetch('http://localhost:8080/login', {\r\n//        method: 'POST',\r\n//        headers: {\r\n//          'Content-Type': 'application/json',\r\n//        },\r\n//        body: JSON.stringify({\r\n//          id: userId,\r\n//          password: password,\r\n//        }),\r\n//      });\r\n//\r\n//      if (response.status === 200) {\r\n//        const data = await response.json();\r\n//        const access_token = data.access_token; // 토큰 가져오기\r\n//        localStorage.setItem('access_token', data.access_token);\r\n//        alert('로그인 성공!!');\r\n//        navigate('/memo'); // 로그인 성공 시 메모 페이지로 이동\r\n//      } else {\r\n//        alert('다시 확인하세요.');\r\n//      }\r\n//    } catch (error) {\r\n//      console.error('로그인 요청 실패:', error);\r\n//      alert('로그인 중 문제가 발생했습니다.');\r\n//    }\r\n//  };\r\n//\r\n//  return (\r\n//    <div className=\"sign-in-htm\">\r\n//      <form onSubmit={handleSubmit}>\r\n//        <div className=\"group\">\r\n//          <label htmlFor=\"user\" className=\"label\">아이디</label>\r\n//          <input id=\"user\" type=\"text\" className=\"input\" value={userId} onChange={handleUserIdChange} />\r\n//        </div>\r\n//        <div className=\"group\">\r\n//          <label htmlFor=\"pass\" className=\"label\">비밀번호</label>\r\n//          <input id=\"pass\" type=\"password\" className=\"input\" data-type=\"password\" value={password} onChange={handlePasswordChange} />\r\n//        </div>\r\n//        <div className=\"group\">\r\n//          <input id=\"check\" type=\"checkbox\" className=\"check\" checked={rememberId} onChange={handleRememberIdChange} />\r\n//          <label htmlFor=\"check\"><span className=\"icon\"></span> 아이디 저장</label>\r\n//        </div>\r\n//        <div className=\"group\">\r\n//          <input type=\"submit\" className=\"button\" value=\"로그인\" />\r\n//        </div>\r\n//      </form>\r\n//      <div className=\"hr\"></div>\r\n//      <div className=\"foot-lnk\">\r\n//        <label htmlFor=\"tab-2\">계정이 없다면 회원가입을 해주세요.</label>\r\n//      </div>\r\n//    </div>\r\n//  );\r\n//}\r\n//\r\n//export default Login;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,SAASC,GAAGA,CAAA,EAAG;EACb;IAAA;IACE;IACAD,OAAA;MAAKE,SAAS,EAAC,YAAY;MAAAC,QAAA,eACzBH,OAAA;QAAKE,SAAS,EAAC,YAAY;QAAAC,QAAA,eACzBH,OAAA;UAAKE,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBH,OAAA;YAAOI,EAAE,EAAC,OAAO;YAACC,IAAI,EAAC,OAAO;YAACC,IAAI,EAAC,KAAK;YAACJ,SAAS,EAAC,SAAS;YAACK,cAAc;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC/EX,OAAA;YAAOY,OAAO,EAAC,OAAO;YAACV,SAAS,EAAC,KAAK;YAAAC,QAAA,EAAC;UAEvC;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRX,OAAA;YAAOI,EAAE,EAAC,OAAO;YAACC,IAAI,EAAC,OAAO;YAACC,IAAI,EAAC,KAAK;YAACJ,SAAS,EAAC;UAAS;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAChEX,OAAA;YAAOY,OAAO,EAAC,OAAO;YAACV,SAAS,EAAC,KAAK;YAAAC,QAAA,EAAC;UAEvC;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRX,OAAA;YAAKE,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzBH,OAAA,CAACJ,KAAK;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACTX,OAAA,CAACH,MAAM;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;AAEV;AAACE,EAAA,GAtBQZ,GAAG;AAwBZ,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}