{"ast":null,"code":"var _jsxFileName = \"/Users/yewon/PycharmProjects/2023-2_PD 2/frontend/src/ImageDragSelect.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageDragSelect() {\n  _s();\n  const [dragStart, setDragStart] = useState({\n    x: 0,\n    y: 0\n  });\n  const [dragEnd, setDragEnd] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const handleMouseDown = e => {\n    setDragStart({\n      x: e.clientX,\n      y: e.clientY\n    });\n    setIsDragging(true);\n  };\n  const handleMouseMove = e => {\n    if (isDragging) {\n      setDragEnd({\n        x: e.clientX,\n        y: e.clientY\n      });\n    }\n  };\n  const handleMouseUp = () => {\n    setIsDragging(false);\n    // 여기에서 선택한 이미지 영역을 처리하거나 서버로 전송할 수 있습니다.\n    console.log(\"선택 영역:\", dragStart, dragEnd);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp,\n    style: {\n      width: '500px',\n      height: '300px',\n      background: '#ddd'\n    },\n    children: isDragging && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        left: Math.min(dragStart.x, dragEnd.x) + 'px',\n        top: Math.min(dragStart.y, dragEnd.y) + 'px',\n        width: Math.abs(dragEnd.x - dragStart.x) + 'px',\n        height: Math.abs(dragEnd.y - dragStart.y) + 'px',\n        background: 'rgba(0, 0, 255, 0.3)'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageDragSelect, \"NlI/wch61k+4UxlI4bpnpB8sgRg=\");\n_c = ImageDragSelect;\nexport default ImageDragSelect;\nvar _c;\n$RefreshReg$(_c, \"ImageDragSelect\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ImageDragSelect","_s","dragStart","setDragStart","x","y","dragEnd","setDragEnd","isDragging","setIsDragging","handleMouseDown","e","clientX","clientY","handleMouseMove","handleMouseUp","console","log","onMouseDown","onMouseMove","onMouseUp","style","width","height","background","children","position","left","Math","min","top","abs","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yewon/PycharmProjects/2023-2_PD 2/frontend/src/ImageDragSelect.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction ImageDragSelect() {\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\n  const [dragEnd, setDragEnd] = useState({ x: 0, y: 0 });\n  const [isDragging, setIsDragging] = useState(false);\n\n  const handleMouseDown = (e) => {\n    setDragStart({ x: e.clientX, y: e.clientY });\n    setIsDragging(true);\n  };\n\n  const handleMouseMove = (e) => {\n    if (isDragging) {\n      setDragEnd({ x: e.clientX, y: e.clientY });\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDragging(false);\n    // 여기에서 선택한 이미지 영역을 처리하거나 서버로 전송할 수 있습니다.\n    console.log(\"선택 영역:\", dragStart, dragEnd);\n  };\n\n  return (\n    <div\n      onMouseDown={handleMouseDown}\n      onMouseMove={handleMouseMove}\n      onMouseUp={handleMouseUp}\n      style={{ width: '500px', height: '300px', background: '#ddd' }}\n    >\n      {isDragging && (\n        <div\n          style={{\n            position: 'absolute',\n            left: Math.min(dragStart.x, dragEnd.x) + 'px',\n            top: Math.min(dragStart.y, dragEnd.y) + 'px',\n            width: Math.abs(dragEnd.x - dragStart.x) + 'px',\n            height: Math.abs(dragEnd.y - dragStart.y) + 'px',\n            background: 'rgba(0, 0, 255, 0.3)',\n          }}\n        ></div>\n      )}\n    </div>\n  );\n}\n\nexport default ImageDragSelect;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC;IAAEO,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAC1D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC;IAAEO,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EACtD,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMa,eAAe,GAAIC,CAAC,IAAK;IAC7BR,YAAY,CAAC;MAAEC,CAAC,EAAEO,CAAC,CAACC,OAAO;MAAEP,CAAC,EAAEM,CAAC,CAACE;IAAQ,CAAC,CAAC;IAC5CJ,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMK,eAAe,GAAIH,CAAC,IAAK;IAC7B,IAAIH,UAAU,EAAE;MACdD,UAAU,CAAC;QAAEH,CAAC,EAAEO,CAAC,CAACC,OAAO;QAAEP,CAAC,EAAEM,CAAC,CAACE;MAAQ,CAAC,CAAC;IAC5C;EACF,CAAC;EAED,MAAME,aAAa,GAAGA,CAAA,KAAM;IAC1BN,aAAa,CAAC,KAAK,CAAC;IACpB;IACAO,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEf,SAAS,EAAEI,OAAO,CAAC;EAC3C,CAAC;EAED,oBACEP,OAAA;IACEmB,WAAW,EAAER,eAAgB;IAC7BS,WAAW,EAAEL,eAAgB;IAC7BM,SAAS,EAAEL,aAAc;IACzBM,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE,OAAO;MAAEC,UAAU,EAAE;IAAO,CAAE;IAAAC,QAAA,EAE9DjB,UAAU,iBACTT,OAAA;MACEsB,KAAK,EAAE;QACLK,QAAQ,EAAE,UAAU;QACpBC,IAAI,EAAEC,IAAI,CAACC,GAAG,CAAC3B,SAAS,CAACE,CAAC,EAAEE,OAAO,CAACF,CAAC,CAAC,GAAG,IAAI;QAC7C0B,GAAG,EAAEF,IAAI,CAACC,GAAG,CAAC3B,SAAS,CAACG,CAAC,EAAEC,OAAO,CAACD,CAAC,CAAC,GAAG,IAAI;QAC5CiB,KAAK,EAAEM,IAAI,CAACG,GAAG,CAACzB,OAAO,CAACF,CAAC,GAAGF,SAAS,CAACE,CAAC,CAAC,GAAG,IAAI;QAC/CmB,MAAM,EAAEK,IAAI,CAACG,GAAG,CAACzB,OAAO,CAACD,CAAC,GAAGH,SAAS,CAACG,CAAC,CAAC,GAAG,IAAI;QAChDmB,UAAU,EAAE;MACd;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EACP;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClC,EAAA,CA3CQD,eAAe;AAAAoC,EAAA,GAAfpC,eAAe;AA6CxB,eAAeA,eAAe;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}